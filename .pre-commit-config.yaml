# Pre-commit configuration for Apartment Accounting Application
# This file configures security and quality checks to run before each commit

# Global exclusions
exclude: |
  (?x)^(
    .*node_modules/.*|
    .*\.pyc$|
    .*\.pyo$|
    .*\.pyd$|
    __pycache__/.*|
    \.pytest_cache/.*|
    \.mypy_cache/.*|
    \.coverage.*|
    htmlcov/.*|
    \.venv/.*|
    venv/.*|
    devsecops/.*|
    testing/.*|
    documents/.*|
    manuals/.*|
    \.git/.*
  )$

repos:
  # General hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-json
        exclude: ^(.*-report\.json|.*test.*\.json|bandit-report\.json)$
      - id: check-toml
      - id: check-merge-conflict
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: debug-statements
      - id: detect-private-key

  # Secret detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: |
          (?x)^(
            package\.lock\.json|
            yarn\.lock|
            .*test.*\.py$|
            .*test.*\.js$|
            .*test.*\.ts$|
            .*test.*\.jsx$|
            .*test.*\.tsx$|
            docker-compose\.yml$|
            .*\.env$|
            .*\.env\.example$|
            .*\.env\.local$|
            .*\.env\.development$|
            .*\.env\.test$|
            .*\.env\.production$|
            .*config.*\.example$|
            .*config.*\.template$|
            .*\.example$|
            .*\.template$
          )$

  # Python code quality and security
  - repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black
        language_version: python3
        files: \.py$
        args: ['--line-length=88']

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: ['--profile', 'black', '--line-length=88']

  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        args: ['--max-line-length=88', '--extend-ignore=E203,W503,D200,D401,D102,D107,D205,D400']
        additional_dependencies: [flake8-docstrings]
        exclude: ^(devsecops/|testing/|documents/|manuals/|.*test_app\.py)$

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.5.1
    hooks:
      - id: mypy
        additional_dependencies: [types-requests, types-PyYAML]
        args: ['--ignore-missing-imports']

  # Python security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-s', 'B101,B105']
        exclude: ^(tests/|test_|devsecops/|testing/|documents/|manuals/|.*test_app\.py)$
        additional_dependencies:
          - "pbr==7.0.1"

  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.2
    hooks:
      - id: python-safety-dependencies-check
        files: requirements\.txt$

  # JavaScript/Node.js code quality and security
  - repo: https://github.com/pre-commit/mirrors-eslint
    rev: v8.47.0
    hooks:
      - id: eslint
        files: \.(js|jsx|ts|tsx)$
        additional_dependencies:
          - "eslint@8.47.0"
          - "eslint-plugin-security@1.7.1"
          - "eslint-plugin-react@7.33.2"
          - "eslint-plugin-react-hooks@4.6.0"
          - "@typescript-eslint/eslint-plugin@6.4.0"
          - "@typescript-eslint/parser@6.4.0"
        args: ['--config', 'frontend/.eslintrc.js']

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.3
    hooks:
      - id: prettier
        files: \.(js|jsx|ts|tsx|json|css|md)$
        args: ['--config', 'frontend/.prettierrc']

  # Docker security and best practices
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint
        args: ['--ignore', 'DL3008', '--ignore', 'DL3009']

  # Infrastructure as Code scanning
  - repo: https://github.com/bridgecrewio/checkov
    rev: 3.0.0
    hooks:
      - id: checkov
        args: ['--framework', 'dockerfile']
        files: Dockerfile|docker-compose\.yml|\.yaml$

  # YAML formatting and validation
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.35.1
    hooks:
      - id: yamllint
        args: ['-d', 'relaxed']

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.35.0
    hooks:
      - id: markdownlint
        args: ['--config', 'devsecops/configs/.markdownlint.yaml']

  # Custom security checks
  - repo: local
    hooks:
      - id: dockerfile-security-check
        name: Dockerfile Security Check
        entry: ./devsecops/scripts/dockerfile-security-check.sh
        language: script
        files: Dockerfile
        pass_filenames: true

      - id: env-file-check
        name: Environment File Check
        entry: ./devsecops/scripts/env-file-check.sh
        language: script
        files: \.env$

      - id: secrets-scan
        name: Secrets Scan
        entry: ./devsecops/scripts/secrets-scan.sh
        language: script
        files: \.(py|js|jsx|ts|tsx|yaml|yml|json)$

# Configuration for specific tools
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false
